# Release workflow, manual, generate the release artifacts

name: Msfx.DI Publish

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
     
  workflow_dispatch:
    branches: [ master ]
     
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  nuget_publish:
  
    # Run Action on latest windwos
    runs-on: windows-latest
    
    env:
     Msfx_DI_Nuget_Version: 1.0.1

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout the code  
      uses: actions/checkout@v2
      
    # Publish to Nuget
    - name: Publish
      id: publish_nuget
      uses: rohith/publish-nuget@v2
      with:
        # Filepath of the project to be packaged, relative to root of repository
        PROJECT_FILE_PATH: src\Msfx.DI\Msfx.DI.csproj
        
        # NuGet package id, used for version detection & defaults to project name
        PACKAGE_NAME: Msfx.DI
        
        # Static version, ignores VERSION_FILE_PATH & VERSION_REGEX
        #VERSION_STATIC: ${{env.Msfx_DI_Nuget_Version}}
        
        # API key to authenticate with NuGet server
        NUGET_KEY: ${{secrets.NUGET_API_KEY}}
        
        # NuGet server uri hosting the packages, defaults to https://api.nuget.org
        NUGET_SOURCE: https://api.nuget.org
