# This is a basic workflow to help you get started with Actions

name: Msfx.DI Release

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  pull_request:
    types: [closed]
    branches: [ master ]
      
  workflow_dispatch:
    branches: [ master ]
     
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_release:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout the code  
      uses: actions/checkout@v2
      
    # Setting the MSBuild path 
    - name: Setup the MSBuild Path
      uses:  microsoft/setup-msbuild@v1.0.1

    # Setting the Nuget
    - name: Setup the NuGet
      uses: NuGet/setup-nuget@v1.0.2
      
    # Restore Nuget packages
    - name: Restore Nuget packages
      run: nuget restore src\Msfx.DI.sln

    # Build and Publish artifacts locally
    - name: Build
      run: msbuild src\Msfx.DI.sln /p:Configuration=Release
      
    # Setup the VS Test runnuer  
    - name: Setup VSTest Path
      uses: darenm/Setup-VSTest@v1
      
    # Run the tests  
    - name: Tets
      run: vstest.console.exe src\Msfx.DITests\bin\Release\Msfx.DI.Tests.dll
      
    # Zip the Artifacts
    - name: Zip Artifacts
      uses: papeloto/action-zip@v1
      with:
        files: src/Msfx.DI/bin/Release
        dest: mfx-di.zip
       
    # Add Release Source to Github
    - name: Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}_${{github.run_id}}
        release_name: Release ${{ github.ref }}_${{github.run_id}}
        body: |
          Preview Build dated: 2020.08.22  
        draft: false
        prerelease: false
     
    # Add Release Artifacts to Github    
    - name: Upload Release Artifacts
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./mfx-di.zip
        asset_name: mfx-di.zip
        asset_content_type: application/zip
